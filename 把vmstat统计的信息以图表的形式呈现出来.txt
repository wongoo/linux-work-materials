

—————————————————
1. 使用vmstat监控数据:

	vmstat 3 > vmstat.out
	# vmstat 1 100 > /tmp/vmstat.out
	# vmplot.sh -i /tmp/vmstat.out -o results
	
	vmstat 2 5 |tee vmstat.out
	vmplot.sh -i vmstat.out -o results
	export DISPLAY=172.16.44.28:0.0 
	
	procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----
 r  b     swpd   free   buff  cache      si   so    bi    bo   in   cs  us sy id wa st
 7  1      0 17808484 262852 42773952    0    0     3   354   12   21    3  2 95  0  0	
 4  1      0 17807236 262856 42773948    0    0     0 24328 23715 25461 34 14 48  2  3	
 8  1      0 17788132 262856 42792532    0    0     0 25164 20695 22791 29 12 55  2  2	
 3  2      0 17754412 262864 42825832    0    0     0 36688 22968 24443 32 13 51  1  3	
 3  0      0 17755528 262864 42825836    0    0     0 21429 23019 24673 33 13 49  2  3	
17  0      0 17706548 262872 42874428    0    0     0 36243 19755 21414 28 11 57  1  2	
 7  0      0 17704812 262872 42874432    0    0     0 23831 22768 25046 32 13 52  1  1	
 8  0      0 17651864 262880 42922920    0    0     0 36579 21399 22594 31 13 53  2  2	
 4  0      0 17648748 262880 42922924    0    0     0 23308 22816 24384 33 14 50  1  2	
 9  1      0 17593692 262884 42971656    0    0     0 37211 20559 22424 29 12 55  1  2	

 
  Procs
       r: The number of processes waiting for run time.
       b: The number of processes in uninterruptible sleep.

   Memory
       swpd: the amount of virtual memory used.
       free: the amount of idle memory.
       buff: the amount of memory used as buffers.
       cache: the amount of memory used as cache.
       inact: the amount of inactive memory. (-a option)
       active: the amount of active memory. (-a option)

   Swap
       si: Amount of memory swapped in from disk (/s).
       so: Amount of memory swapped to disk (/s).

   IO
       bi: Blocks received from a block device (blocks/s).
       bo: Blocks sent to a block device (blocks/s).


   System
       in: The number of interrupts per second, including the clock.
       cs: The number of context switches per second.


   CPU
       These are percentages of total CPU time.
       us: Time spent running non-kernel code. (user time, including nice time)
       sy: Time spent running kernel code. (system time)
       id: Time spent idle.
       wa: Time spent waiting for IO.
	   
	   
	
—————————————————
2. 安装必要的依赖库: 
	yum install gnuplot -y  
	yum install sysstat -y
	
gd-2.0.35-11.el6.x86_64.rpm
gnuplot-4.2.6-2.el6.x86_64.rpm
gnuplot-common-4.2.6-2.el6.x86_64.rpm
libXpm-3.5.10-2.el6.x86_64.rpm
sysstat-9.0.4-22.el6.x86_64.rpm

—————————————————
3: vmplot.sh 脚本：

#!/bin/sh
 
INFILE="$1"
OUTDIR="/tmp"
DATAFILE="vmstat.data"
LABEL=""
SAMPLE=""
 
X_UNITS="Minutes"
DEFAULT_SIZE="set size 0.75, 0.6"
 
[ -z `which gnuplot 2>/dev/null` ] && echo "gunplot must be installed for this to work" && exit 1
 
while getopts "i:o:x:l:s:" opt; do
        case $opt in
               i)
                       INFILE=$OPTARG
                       ;;
               l)
                       LABEL=$OPTARG
                       ;;
               o)
                       OUTDIR=$OPTARG
                       ;;
                x)
                       X_UNITS=$OPTARG
                       ;;
        esac
done
 
if [ ! -f "$INFILE" ]; then
        echo "$INFILE does not exist."
        exit 1
fi
 
# Blindly create the output directory.
mkdir -p $OUTDIR
 
# This is based off vmstat with a header like:
 
#procs -----------memory---------- ---swap-- -----io---- --system-- ----cpu----
# r  b   swpd   free   buff  cache   si   so    bi    bo   in    cs us sy id wa
 
# Make 0 the first point for each graph
# Also add another column at the end to represent total processor utilization.
echo "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0" > ${OUTDIR}/vmstat.data
cat ${INFILE} | grep -v '^procs ' | grep -v '^ r  b ' | sed -e "1,1d" | awk '{ print NR, $1, $2, $3/1024, $4/1024, $5/1024, $6/1024, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $13+$14+$16 }' >> ${OUTDIR}/${DATAFILE}
 
# Plot the procs information.
NAME="procs"
INPUT_FILE="${NAME}.input"
PNG_FILE="${NAME}.png"
echo "plot \"${DATAFILE}\" using 1:2 title \"waiting for run time\" with lines, \\" > ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:3 title \"in uninterruptible sleep\" with lines" >> ${OUTDIR}/${INPUT_FILE}
echo "set title \"Procs - ${LABEL}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
echo "set xlabel \"Sample Time (${X_UNITS})\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set ylabel \"Count\"" >> ${OUTDIR}/${INPUT_FILE}
echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
echo "set term png small" >> ${OUTDIR}/${INPUT_FILE}
echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set yrange [0:]" >> ${OUTDIR}/${INPUT_FILE}
echo "replot" >> ${OUTDIR}/${INPUT_FILE}
(cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE})
 
# Plot the memory information.
NAME="memory"
INPUT_FILE="${NAME}.input"
PNG_FILE="${NAME}.png"
echo "plot \"${DATAFILE}\" using 1:4 title \"Swapped\" with lines, \\" > ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:5 title \"Free\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:6 title \"Buffers\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:7 title \"Cache\" with lines" >> ${OUTDIR}/${INPUT_FILE}
echo "set title \"Memory - ${LABEL}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
echo "set xlabel \"Sample Time (${X_UNITS})\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set ylabel \"Megabytes\"" >> ${OUTDIR}/${INPUT_FILE}
echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
echo "set term png small" >> ${OUTDIR}/${INPUT_FILE}
echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set yrange [0:]" >> ${OUTDIR}/${INPUT_FILE}
echo "replot" >> ${OUTDIR}/${INPUT_FILE}
(cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE})
 
# Plot the swap information.
NAME="swap"
INPUT_FILE="${NAME}.input"
PNG_FILE="${NAME}.png"
echo "plot \"${DATAFILE}\" using 1:8 title \"in from disk\" with lines, \\" > ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:9 title \"out to disk\" with lines" >> ${OUTDIR}/${INPUT_FILE}
echo "set title \"Swap - ${LABEL}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
echo "set xlabel \"Sample Time (${X_UNITS})\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set ylabel \"Kilobytes / Second\"" >> ${OUTDIR}/${INPUT_FILE}
echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
echo "set term png small" >> ${OUTDIR}/${INPUT_FILE}
echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set yrange [0:]" >> ${OUTDIR}/${INPUT_FILE}
echo "replot" >> ${OUTDIR}/${INPUT_FILE}
(cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE})
 
# Plot the i/o information.
NAME="io"
INPUT_FILE="${NAME}.input"
PNG_FILE="${NAME}.png"
echo "plot \"${DATAFILE}\" using 1:10 title \"received from device\" with lines, \\" > ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:11 title \"sent to device\" with lines" >> ${OUTDIR}/${INPUT_FILE}
echo "set title \"Disk IO  - ${LABEL}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
echo "set xlabel \"Sample Time (${X_UNITS})\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set ylabel \"Blocks per Second\"" >> ${OUTDIR}/${INPUT_FILE}
echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
echo "set term png small" >> ${OUTDIR}/${INPUT_FILE}
echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set yrange [0:]" >> ${OUTDIR}/${INPUT_FILE}
echo "replot" >> ${OUTDIR}/${INPUT_FILE}
(cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE})
 
# Plot the interrupt.
NAME="in"
INPUT_FILE="${NAME}.input"
PNG_FILE="${NAME}.png"
echo "plot \"${DATAFILE}\" using 1:12 title \"interrupts\" with lines" > ${OUTDIR}/${INPUT_FILE}
echo "set title \"Interrupts - ${LABEL}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
echo "set xlabel \"Sample Time (${X_UNITS})\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set ylabel \"# of Interrupts / Second\"" >> ${OUTDIR}/${INPUT_FILE}
echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
echo "set term png small" >> ${OUTDIR}/${INPUT_FILE}
echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set yrange [0:]" >> ${OUTDIR}/${INPUT_FILE}
echo "replot" >> ${OUTDIR}/${INPUT_FILE}
(cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE})
 
# Plot the interrupt.
NAME="cs"
INPUT_FILE="${NAME}.input"
PNG_FILE="${NAME}.png"
echo "plot \"${DATAFILE}\" using 1:13 title \"context switches\" with lines" > ${OUTDIR}/${INPUT_FILE}
echo "set title \"Context Switches - ${LABEL}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
echo "set xlabel \"Sample Time (${X_UNITS})\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set ylabel \"# of Context Switches / Second\"" >> ${OUTDIR}/${INPUT_FILE}
echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
echo "set term png small" >> ${OUTDIR}/${INPUT_FILE}
echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set yrange [0:]" >> ${OUTDIR}/${INPUT_FILE}
echo "replot" >> ${OUTDIR}/${INPUT_FILE}
(cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE})
 
# Plot the processor utilization.
NAME="cpu"
INPUT_FILE="${NAME}.input"
PNG_FILE="${NAME}.png"
echo "plot \"${DATAFILE}\" using 1:18 title \"total\" with lines, \\" > ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:14 title \"user\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:15 title \"system\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:16 title \"idle\" with lines, \\" >> ${OUTDIR}/${INPUT_FILE}
echo "     \"${DATAFILE}\" using 1:17 title \"wait\" with lines" >> ${OUTDIR}/${INPUT_FILE}
echo "set title \"System Processor Utilization - ${LABEL}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set grid xtics ytics" >> ${OUTDIR}/${INPUT_FILE}
echo "set xlabel \"Sample Time (${X_UNITS})\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set ylabel \"% Utilized\"" >> ${OUTDIR}/${INPUT_FILE}
echo $DEFAULT_SIZE >> ${OUTDIR}/${INPUT_FILE}
echo "set term png small" >> ${OUTDIR}/${INPUT_FILE}
echo "set output \"${PNG_FILE}\"" >> ${OUTDIR}/${INPUT_FILE}
echo "set yrange [0:100]" >> ${OUTDIR}/${INPUT_FILE}
echo "replot" >> ${OUTDIR}/${INPUT_FILE}
(cd ${OUTDIR}; gnuplot -persist ${INPUT_FILE})
 
 
(
echo "<html><head><title>vmplot - $INFILE</title></head><body>"
echo "<a href='#cpu'>CPU</a> | <a href='#io'>Disk I/O</a> | "
echo "<a href='#memory'>memory</a> | <a href='#swap'>swap</a> | "
echo "<a href='#procs'>Processes</a> | <a href='#cs'>Context Switches</a> | <a href='#in'>Interrupts</a> "
echo "- Generated from '${INFILE}'<br />"
 
echo "<a name='cpu'></a><img src='cpu.png' /><a name='io'></a><img src='io.png' /><br />"
echo "<a name='memory'></a><img src='memory.png' /><a name='swap'></a><img src='swap.png' /><br />"
echo "<a name='procs'></a><img src='procs.png' /><a name='cs'></a><img src='cs.png' /><br />"
echo "<a name='in'></a><img src='in.png' /><br />"
echo "</body></html>"
 
) > ${OUTDIR}/vmplot.htm
exit 0
 